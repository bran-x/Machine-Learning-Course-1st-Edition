{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Stacking","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNVKDT+pFTAGyJULWNu7XES"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# StackingClassifier"],"metadata":{"id":"y2aHjM0FffVU"}},{"cell_type":"markdown","source":["## 1. Dataset"],"metadata":{"id":"juwqYfxGfrOw"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"VCGwEbFUfUoh"},"outputs":[],"source":["from sklearn.datasets import make_classification\n","X,Y = make_classification(n_samples=800, n_features=8,n_informative=8, n_redundant=0, n_repeated=0, n_classes=5, n_clusters_per_class=1)"]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score"],"metadata":{"id":"xxMmQlTngEwI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 2. Modelo"],"metadata":{"id":"7Is2KalWftfK"}},{"cell_type":"code","source":["# SVM\n","from sklearn.svm import SVC\n","svc = SVC()\n","# NaiveBayes\n","from sklearn.naive_bayes import GaussianNB\n","gnb = GaussianNB()"],"metadata":{"id":"IwtISlv9fiLq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Stacking\n","from sklearn.ensemble import StackingClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","sc =StackingClassifier([('SVC_C1',svc),('GNB',gnb),('DTC',DecisionTreeClassifier(max_depth=20))])"],"metadata":{"id":"L8EN3e6wgaIP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["modelos = [svc,gnb,sc]"],"metadata":{"id":"SuByWwvDgXTQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Evaluamos sobre todos los modelos\n","nombres = list()\n","acc = list()\n","for modelo in modelos:\n","  a = cross_val_score(modelo, X,Y, cv=3).mean()\n","  nombres.append(str(modelo))\n","  acc.append(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9n9nLG2tgB4Y","executionInfo":{"status":"ok","timestamp":1649629125011,"user_tz":300,"elapsed":824,"user":{"displayName":"Cristian Bran","userId":"13635374325389139982"}},"outputId":"43e62cd0-304a-4da8-c5b3-c6a43eefbfa0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","data = {'Nombre':nombres, 'Accuracy':acc}\n","df = pd.DataFrame(data=data)"],"metadata":{"id":"PW-UIQc8hyp2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.sort_values('Accuracy',axis=0, ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"o1xUE0KziASl","executionInfo":{"status":"ok","timestamp":1649629130482,"user_tz":300,"elapsed":5,"user":{"displayName":"Cristian Bran","userId":"13635374325389139982"}},"outputId":"7722fc89-b5d9-4456-f467-c8b887b6d3c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              Nombre  Accuracy\n","0                                              SVC()  0.901279\n","2  StackingClassifier(estimators=[('SVC_C1', SVC(...  0.898787\n","1                                       GaussianNB()  0.687491"],"text/html":["\n","  <div id=\"df-12dfe224-8cd4-4fca-b42b-50788514de0f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>SVC()</td>\n","      <td>0.901279</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>StackingClassifier(estimators=[('SVC_C1', SVC(...</td>\n","      <td>0.898787</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>GaussianNB()</td>\n","      <td>0.687491</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12dfe224-8cd4-4fca-b42b-50788514de0f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-12dfe224-8cd4-4fca-b42b-50788514de0f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-12dfe224-8cd4-4fca-b42b-50788514de0f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}]}]}